language: c
dist: trusty
services: docker

matrix:
  include:
  #Test JtR using a clang build with asan and OpenCL
  - compiler: gcc     #better to use CLANG
    env: TEST="usual" ASAN="yes" OPENCL="yes" F=1

  #Test JtR using a clang build with asan and OpenCL
  - compiler: gcc     #better to use CLANG
    env: TEST="usual" ASAN="yes" OPENCL="yes" F=2

  #Test JtR using an ordinary OpenCL build
  - compiler: clang   #better to use GCC
    env: TEST="usual" OPENCL="yes"

  #Test JtR using a "hot" OS/compiler
  - env: TEST="fresh" ASAN="yes" BUILD_OPTS="--enable-memdbg --enable-werror" CCO="gcc"
  - env: TEST="fresh" ASAN="yes" BUILD_OPTS="--enable-memdbg --enable-werror" CCO="clang" #ASAN+OpenMP fails in clang 4

  #Test a non OpenMP build with clang (unusual test environment) 
  - compiler: clang
    env: TEST="usual" ASAN="yes" BUILD_OPTS="--disable-native-tests --disable-openmp"

  #Test a non SIMD build with clang (unusual test environment) #better to use CLANG
  - env: TEST="usual" ASAN="yes" OPENCL="yes" BUILD_OPTS="--disable-native-tests CPPFLAGS=-mno-sse2"

  #Test --restore using TS
  #- env: TEST="TS --restore" DISABLE SINCE WE KNOW IT IS NOT WORKING

  #Test using TS - CPU formats
  - compiler: clang
    env: TEST="TS"

  #Test using TS - OpenCL
  - compiler: clang
    env: TEST="TS" OPENCL="yes"

  #Test --internal using TS
  - compiler: clang
    env: TEST="TS --internal" OPENCL="yes"

  #Test the Ubuntu Snap package
  #- env: TEST="snap" SNAPD can't work inside docker

  allow_failures:
  - env: TEST="fresh" ASAN="yes" BUILD_OPTS="--enable-memdbg --enable-werror" CCO="gcc"

  - env: TEST="fresh" ASAN="yes" BUILD_OPTS="--enable-memdbg --enable-werror" CCO="clang"

  - env: TEST="usual" ASAN="yes" BUILD_OPTS="--disable-native-tests --disable-openmp"

  - env: TEST="usual" ASAN="yes" OPENCL="yes" BUILD_OPTS="--disable-native-tests CPPFLAGS=-mno-sse2"

  #- env: TEST="TS --restore"

  - env: TEST="TS"

  - env: TEST="TS" OPENCL="yes"

  - env: TEST="TS --internal" OPENCL="yes"

  #- env: TEST="snap"

  fast_finish: true

before_install:
  - export OMP_NUM_THREADS=4

script:
  - .travis/travis-ci.sh

